// This is the CLI syntax file of a test/sample program that handles
// an employee roster of a company.


// This line tests if comments are handled correctly

// List a summary of employees.
show employees

// List detail records of all employees.
show employees all

// List all employees within a certain range of employee ids
show employees-by-id { <UINT:min> { <UINT:max> } }

// Add a new employee or enter the record of an existing employee
employee <HEX:id>

#ifdef TEST_LABEL1
// This next line tests if file inclusion is handled correctly.
#include "test_included.cli"
#endif

#ifdef TEST_LABEL2
// This next line tests if not existing label is handled correctly.
#include "test_not_included.cli"
#endif

// Delete an existing employee
no employee <HEX:id>

// Save the current roster to a file
save roster <STRING:filename>

// Load roster file
load roster <FILE:filename>

// List all available commands with a substring 'filter' in it.
help { <STRING:filter> }

// Show specific field of an employee.
show employee <HEX:id> <LIST:height,weight,date-of-birth,title:field>

// Show the bonus factor of an employee.
+ show employee <HEX:id> bonus-factor

// Enable privileged mode
enable privileged-mode

// Disable privileged mode
+ disable privileged-mode

// Leave the database
quit

// Show test info
show test info

// Show dp build time
show dp build time

// Show pkt stat
show pkt stat

// Show interface stat
show interface <UINT:id>

// Show FPA stat
show fpa

// Show mem pool
show mem pool

// Set rule SMAC DMAC SIP DIP SPORT DPORT PROTOCOL TIME_START TIME_END ACTION
add rule smac <MACADDR:smac> dmac <MACADDR:dmac> sip <IPV4ADDR:sip> mask <UINT:sip_mask> dip <IPV4ADDR:dip> mask <UINT:dip_mask> sport_start <UINT:sport_start> sport_end <UINT:sport_end> dport_start <UINT:dport_start> dport_end <UINT:dport_end> proto_start <UINT:proto_start> proto_end <UINT:proto_end> <LIST:fw,drop:action>

// Show rule
show rule

// Commit rule all
commit rule all

// delete rule
delete rule

// delete rule all
delete rule all